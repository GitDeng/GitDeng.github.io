<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Android_basic | 程序员笔记]]></title>
  <link href="http://gitdeng.github.io/blog/categories/android-basic/atom.xml" rel="self"/>
  <link href="http://gitdeng.github.io/"/>
  <updated>2015-07-21T23:53:58+08:00</updated>
  <id>http://gitdeng.github.io/</id>
  <author>
    <name><![CDATA[程序员笔记]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Android的权限系统——为基本组件添加权限检查]]></title>
    <link href="http://gitdeng.github.io/blog/2015/07/20/Android-authority-system-Add-permissions-for-basic-components/"/>
    <updated>2015-07-20T18:39:20+08:00</updated>
    <id>http://gitdeng.github.io/blog/2015/07/20/Android-authority-system-Add-permissions-for-basic-components</id>
    <content type="html"><![CDATA[<h2>app模块中</h2>

<h3>1 MainActivity.java</h3>

<pre><code>package cn.loverobots.componentpermission;

import android.content.Intent;
import android.support.v7.app.ActionBarActivity;
import android.os.Bundle;
import android.view.View;

public class MainActivity extends ActionBarActivity {
    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);
        findViewById(R.id.btnStartMyAty).setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                startActivity(new Intent(MainActivity.this,MyAty.class));
            }
        });
    }
}
</code></pre>

<h3>2 MyAty.java</h3>

<pre><code>package cn.loverobots.componentpermission;

import android.support.v7.app.ActionBarActivity;
import android.os.Bundle;

public class MyAty extends ActionBarActivity {
    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_my_aty);
    }
}
</code></pre>

<h3>3 AndroidManifest.xml</h3>

<pre><code>&lt;?xml version="1.0" encoding="utf-8"?&gt;
&lt;manifest xmlns:android="http://schemas.android.com/apk/res/android"
    package="cn.loverobots.componentpermission" &gt;

    &lt;!-- 声明一个权限 --&gt;
    &lt;permission android:name="cn.loverobots.componentpermission.permission.MyAty"/&gt;

    &lt;application
        android:allowBackup="true"
        android:icon="@mipmap/ic_launcher"
        android:label="@string/app_name"
        android:theme="@style/AppTheme" &gt;
        &lt;activity
            android:name=".MainActivity"
            android:label="@string/app_name" &gt;
            &lt;intent-filter&gt;
                &lt;action android:name="android.intent.action.MAIN" /&gt;
                &lt;category android:name="android.intent.category.LAUNCHER" /&gt;
            &lt;/intent-filter&gt;
        &lt;/activity&gt;
        &lt;activity
            android:name=".MyAty"
            android:label="@string/title_activity_my_aty"
            android:permission="cn.loverobots.componentpermission.permission.MyAty"&gt;
            &lt;intent-filter&gt;
                &lt;category android:name="android.intent.category.DEFAULT"/&gt;
                &lt;action android:name="cn.loverobots.componentpermission.intent.action.MyAty"/&gt;
            &lt;/intent-filter&gt;
        &lt;/activity&gt;
    &lt;/application&gt;
&lt;/manifest&gt;
</code></pre>

<h3>4 activity_main.xml</h3>

<pre><code>&lt;LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:tools="http://schemas.android.com/tools" android:layout_width="match_parent"
    android:layout_height="match_parent" android:paddingLeft="@dimen/activity_horizontal_margin"
    android:paddingRight="@dimen/activity_horizontal_margin"
    android:paddingTop="@dimen/activity_vertical_margin"
    android:paddingBottom="@dimen/activity_vertical_margin"
    tools:context=".MainActivity"&gt;

    &lt;Button
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:text="启动MyAty"
        android:id="@+id/btnStartMyAty" /&gt;
&lt;/LinearLayout&gt;
</code></pre>

<h3>5 activity_my_aty.xml</h3>

<pre><code>&lt;RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:tools="http://schemas.android.com/tools" android:layout_width="match_parent"
    android:layout_height="match_parent" android:paddingLeft="@dimen/activity_horizontal_margin"
    android:paddingRight="@dimen/activity_horizontal_margin"
    android:paddingTop="@dimen/activity_vertical_margin"
    android:paddingBottom="@dimen/activity_vertical_margin"
    tools:context="cn.loverobots.componentpermission.MyAty"&gt;

    &lt;TextView
        android:text="这是一个被启动的Activity"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content" /&gt;
&lt;/RelativeLayout&gt;
</code></pre>

<h2>anotherApp模块中</h2>

<h3>1 MainActivity.xml</h3>

<pre><code>package cn.loverobots.anotherapp;

import android.content.Intent;
import android.support.v7.app.ActionBarActivity;
import android.os.Bundle;
import android.view.View;

public class MainActivity extends ActionBarActivity {
    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);
        findViewById(R.id.btnStartMyAty).setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                startActivity(new Intent("cn.loverobots.componentpermission.intent.action.MyAty"));
            }
        });
    }
}
</code></pre>

<h3>2 AndroidManifest.xml</h3>

<pre><code>&lt;?xml version="1.0" encoding="utf-8"?&gt;
&lt;manifest xmlns:android="http://schemas.android.com/apk/res/android"
    package="cn.loverobots.anotherapp" &gt;
    &lt;!-- 获取启动app中MyAty的启动权限 --&gt;
    &lt;uses-permission android:name="cn.loverobots.componentpermission.permission.MyAty"/&gt;
    &lt;application
        android:allowBackup="true"
        android:icon="@mipmap/ic_launcher"
        android:label="@string/app_name"
        android:theme="@style/AppTheme" &gt;
        &lt;activity
            android:name=".MainActivity"
            android:label="@string/app_name" &gt;
            &lt;intent-filter&gt;
                &lt;action android:name="android.intent.action.MAIN" /&gt;
                &lt;category android:name="android.intent.category.LAUNCHER" /&gt;
            &lt;/intent-filter&gt;
        &lt;/activity&gt;
    &lt;/application&gt;
&lt;/manifest&gt;
</code></pre>

<h3>3 activity_main.xml</h3>

<pre><code>&lt;LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:tools="http://schemas.android.com/tools" android:layout_width="match_parent"
    android:layout_height="match_parent" android:paddingLeft="@dimen/activity_horizontal_margin"
    android:paddingRight="@dimen/activity_horizontal_margin"
    android:paddingTop="@dimen/activity_vertical_margin"
    android:paddingBottom="@dimen/activity_vertical_margin"
    android:orientation="vertical"
    tools:context=".MainActivity"&gt;

    &lt;Button
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:text="启动MyAty"
        android:id="@+id/btnStartMyAty" /&gt;
&lt;/LinearLayout&gt;
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Android的权限系统——为代码添加权限检查]]></title>
    <link href="http://gitdeng.github.io/blog/2015/07/20/Android-authority-system-Add-permissions-for-code-check/"/>
    <updated>2015-07-20T14:39:20+08:00</updated>
    <id>http://gitdeng.github.io/blog/2015/07/20/Android-authority-system-Add-permissions-for-code-check</id>
    <content type="html"><![CDATA[<h3>1 MainActivity.java</h3>

<pre><code>package cn.loverobots.checkpermissionincode;

import android.support.v7.app.ActionBarActivity;
import android.os.Bundle;

public class MainActivity extends ActionBarActivity {
    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);
        Hello.sayHello(this);
    }
}
</code></pre>

<h3>2 Hello.java</h3>

<pre><code>package cn.loverobots.checkpermissionincode;

import android.content.Context;
import android.content.pm.PackageManager;

public class Hello {
    public static final String PERMISSION_SAY_HELLO = "cn.loverobots.checkpermissionincode.permission.SAY_HELLO";
    public static void sayHello(Context context){
        int checkResult = context.checkCallingOrSelfPermission(PERMISSION_SAY_HELLO);
        if(checkResult != PackageManager.PERMISSION_GRANTED){
            throw new SecurityException("执行sayHello方法需要有cn.loverobots.checkpermissionincode.permission.SAY_HELLO权限");
        }
        System.out.println("Hello JACK的机器人");
    }
}
</code></pre>

<h3>3 AndroidManifest.xml</h3>

<pre><code>&lt;?xml version="1.0" encoding="utf-8"?&gt;
&lt;manifest xmlns:android="http://schemas.android.com/apk/res/android"
    package="cn.loverobots.checkpermissionincode" &gt;
    &lt;permission android:name="cn.loverobots.checkpermissionincode.permission.SAY_HELLO"/&gt;
    &lt;!-- 不使用uses-permission获取权限，会抛出一个自定义的错误提示“执行sayHello方法需要有cn.loverobots.checkpermissionincode.permission.SAY_HELLO权限” --&gt;
    &lt;uses-permission android:name="cn.loverobots.checkpermissionincode.permission.SAY_HELLO"/&gt;
    &lt;application
        android:allowBackup="true"
        android:icon="@mipmap/ic_launcher"
        android:label="@string/app_name"
        android:theme="@style/AppTheme" &gt;
        &lt;activity
            android:name=".MainActivity"
            android:label="@string/app_name" &gt;
            &lt;intent-filter&gt;
                &lt;action android:name="android.intent.action.MAIN" /&gt;
                &lt;category android:name="android.intent.category.LAUNCHER" /&gt;
            &lt;/intent-filter&gt;
        &lt;/activity&gt;
    &lt;/application&gt;
&lt;/manifest&gt;
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Android的权限系统——请求权限实例]]></title>
    <link href="http://gitdeng.github.io/blog/2015/07/20/Android-authority-system-Request-permission-instance/"/>
    <updated>2015-07-20T12:39:20+08:00</updated>
    <id>http://gitdeng.github.io/blog/2015/07/20/Android-authority-system-Request-permission-instance</id>
    <content type="html"><![CDATA[<h2>权限系统的目的</h2>

<p>增加权限系统的目的是为了让用户能够查看到当前软件所具有的权限，是一种安全机制，即如果用户不想要将要安装的软件具有此权限，可以拒绝安装。</p>

<h2>代码示例</h2>

<h3>1 MainActivity.java</h3>

<pre><code>package cn.loverobots.learnwebview;

import android.support.v7.app.ActionBarActivity;
import android.os.Bundle;
import android.webkit.WebView;

public class MainActivity extends ActionBarActivity {
    private WebView webView;
    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);
        webView = (WebView) findViewById(R.id.webView);
        webView.loadUrl("http://www.loverobots.cn");
    }
}
</code></pre>

<h3>2 activity_main.xml</h3>

<pre><code>&lt;LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:tools="http://schemas.android.com/tools" android:layout_width="match_parent"
    android:layout_height="match_parent" android:paddingLeft="@dimen/activity_horizontal_margin"
    android:paddingRight="@dimen/activity_horizontal_margin"
    android:paddingTop="@dimen/activity_vertical_margin"
    android:paddingBottom="@dimen/activity_vertical_margin"
    android:orientation="vertical"
    tools:context=".MainActivity"&gt;

    &lt;WebView
        android:layout_width="match_parent"
        android:layout_height="match_parent"
        android:id="@+id/webView" /&gt;
&lt;/LinearLayout&gt;
</code></pre>

<h3>3 AndroidManifest.xml</h3>

<pre><code>&lt;?xml version="1.0" encoding="utf-8"?&gt;
&lt;manifest xmlns:android="http://schemas.android.com/apk/res/android"
    package="cn.loverobots.learnwebview" &gt;
    &lt;!-- 由于没有请求权限，会报错Webpage not available，这时需要通过以下方式获取访问Internet的权限 --&gt;
    &lt;uses-permission android:name="android.permission.INTERNET"/&gt;
    &lt;!-- 增加获取权限的意义是，软件使用用户能够方便用户查看当前软件所具有的权限，是一种权限机制 --&gt;
    &lt;application
        android:allowBackup="true"
        android:icon="@mipmap/ic_launcher"
        android:label="@string/app_name"
        android:theme="@style/AppTheme" &gt;
        &lt;activity
            android:name=".MainActivity"
            android:label="@string/app_name" &gt;
            &lt;intent-filter&gt;
                &lt;action android:name="android.intent.action.MAIN" /&gt;
                &lt;category android:name="android.intent.category.LAUNCHER" /&gt;
            &lt;/intent-filter&gt;
        &lt;/activity&gt;
    &lt;/application&gt;
&lt;/manifest&gt;
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Android日志系统]]></title>
    <link href="http://gitdeng.github.io/blog/2015/07/20/Android-log-system/"/>
    <updated>2015-07-20T08:39:20+08:00</updated>
    <id>http://gitdeng.github.io/blog/2015/07/20/Android-log-system</id>
    <content type="html"><![CDATA[<h2>代码示例</h2>

<pre><code>package cn.loverobots.learnlog;

import android.support.v7.app.ActionBarActivity;
import android.os.Bundle;
import android.util.Log;


public class MainActivity extends ActionBarActivity {
    //指明Android日志信息是从MainActivity中输出的，且TAG可用于日志分类显示
    private static String TAG = "MainActivity";

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);
        //Java语言本身提供的日志输出方式
        System.out.println("Java普通日志Info");
        //错误提示信息级别比普通日志信息要高
        System.err.println("Java错误日志Warn");
        //Android提供的日志API，级别从上到下依次降低
        Log.e(TAG,"错误信息");
        Log.w(TAG,"警告信息");
        Log.i(TAG,"普通信息");
        Log.d(TAG,"调试信息");
        Log.v(TAG,"无用信息");//比如一些程序员的唠叨话
        Log.e("MSG","其他信息");
    }
}
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[BroadcastReceiver的优先级]]></title>
    <link href="http://gitdeng.github.io/blog/2015/07/20/BroadcastReceiver-priority/"/>
    <updated>2015-07-20T00:39:20+08:00</updated>
    <id>http://gitdeng.github.io/blog/2015/07/20/BroadcastReceiver-priority</id>
    <content type="html"><![CDATA[<h2>使用简介</h2>

<p>在AndroidManifest.xml文件中注册receiver时，可在过滤器中增加优先级设置(priority)，数字越大优先级越高，越早执行。
<code>
&lt;intent-filter android:priority="7"&gt;
                &lt;action android:name="cn.loverobots.learnbroadcastreceiver.intent.action.MyReceiver"/&gt;
&lt;/intent-filter&gt;
</code></p>

<h2>注意事项</h2>

<p>采用abordBroadcast();方法进行广播中断时，不能采用sendBroadcast(new Intent);方式进行广播发送，会报错（BroadcastReceiver trying to return result during a non-ordered broadcast），且不会有中断广播效果。应该采用sendOrderedBroadcast(i,null);方式发送广播。</p>

<h2>代码举例</h2>

<h3>1 AndroidManifest.xml</h3>

<pre><code>&lt;?xml version="1.0" encoding="utf-8"?&gt;
&lt;manifest xmlns:android="http://schemas.android.com/apk/res/android"
    package="cn.loverobots.learnbroadcastreceiver" &gt;

    &lt;application
        android:allowBackup="true"
        android:icon="@mipmap/ic_launcher"
        android:label="@string/app_name"
        android:theme="@style/AppTheme" &gt;
        &lt;activity
            android:name=".MainActivity"
            android:label="@string/app_name" &gt;
            &lt;intent-filter&gt;
                &lt;action android:name="android.intent.action.MAIN" /&gt;

                &lt;category android:name="android.intent.category.LAUNCHER" /&gt;
            &lt;/intent-filter&gt;
        &lt;/activity&gt;

        &lt;receiver
            android:name=".MyReceiver2"
            android:enabled="true"
            android:exported="true"&gt;
            &lt;intent-filter android:priority="7"&gt;
                &lt;action android:name="cn.loverobots.learnbroadcastreceiver.intent.action.MyReceiver"/&gt;
            &lt;/intent-filter&gt;
        &lt;/receiver&gt;
        &lt;receiver
            android:name=".MyReceiver"
            android:enabled="true"
            android:exported="true"&gt;
            &lt;intent-filter android:priority="8"&gt;
                &lt;action android:name="cn.loverobots.learnbroadcastreceiver.intent.action.MyReceiver"/&gt;
            &lt;/intent-filter&gt;
        &lt;/receiver&gt;
    &lt;/application&gt;

&lt;/manifest&gt;
</code></pre>

<h3>2 MainActivity.java</h3>

<pre><code>package cn.loverobots.learnbroadcastreceiver;

import android.content.Intent;
import android.content.IntentFilter;
import android.support.v7.app.ActionBarActivity;
import android.os.Bundle;
import android.view.View;

public class MainActivity extends ActionBarActivity implements View.OnClickListener {

    private MyReceiver receiver = null;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);

        findViewById(R.id.btnSendMsg).setOnClickListener(this);
        findViewById(R.id.btnReg).setOnClickListener(this);
        findViewById(R.id.btnUnreg).setOnClickListener(this);
    }

    @Override
    public void onClick(View v) {
        switch(v.getId()){
            case R.id.btnSendMsg:
//                Intent i = new Intent(this,MyReceiver.class);
                //这时只能隐式Intent传递数据了
                Intent i = new Intent(MyReceiver.ACTION);
                i.putExtra("data","JACK的机器人");
//                sendBroadcast(i);//采用abortBroadcast();中断广播后，不能再采用此方式会报错，不能被中断
                //报错BroadcastReceiver trying to return result during a non-ordered broadcast后，采用方式
                sendOrderedBroadcast(i,null);
                break;
            case R.id.btnReg:
                //为避免重复注册操作，加入判断条件
                if(receiver == null){
                    //初始化receiver
                    receiver = new MyReceiver();
                    registerReceiver(receiver,new IntentFilter(MyReceiver.ACTION));
                    System.out.println("注册了接收器");
                }
                break;
            case R.id.btnUnreg:
                if(receiver != null){
                    unregisterReceiver(receiver);
                    receiver = null;
                    System.out.println("注消了接收器");
                }
                break;
        }
    }
}
</code></pre>

<h3>3 MyReceiver.java(继承BroadcastReceiver)</h3>

<pre><code>package cn.loverobots.learnbroadcastreceiver;

import android.content.BroadcastReceiver;
import android.content.Context;
import android.content.Intent;

public class MyReceiver extends BroadcastReceiver {

    public static final String ACTION = "cn.loverobots.learnbroadcastreceiver.intent.action.MyReceiver";

    public MyReceiver() {
    }

    @Override
    public void onReceive(Context context, Intent intent) {
//        System.out.println("接收到了消息，消息的内容是："+intent.getStringExtra("data"));
        System.out.println("MyReceiver 接收到了消息");
        //中断广播可以让优先级比其低的receiver不再接收到消息
        abortBroadcast();
    }
}
</code></pre>

<h3>4 MyReceiver2.java(继承BroadcastReceiver)</h3>

<pre><code>package cn.loverobots.learnbroadcastreceiver;

import android.content.BroadcastReceiver;
import android.content.Context;
import android.content.Intent;

public class MyReceiver2 extends BroadcastReceiver {

    public MyReceiver2() {
    }

    @Override
    public void onReceive(Context context, Intent intent) {
        System.out.println("MyReceiver2 接收到了消息");
    }
}
</code></pre>

<h3>5 activity_main.xml</h3>

<pre><code>&lt;LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:tools="http://schemas.android.com/tools" android:layout_width="match_parent"
    android:layout_height="match_parent" android:paddingLeft="@dimen/activity_horizontal_margin"
    android:paddingRight="@dimen/activity_horizontal_margin"
    android:paddingTop="@dimen/activity_vertical_margin"
    android:paddingBottom="@dimen/activity_vertical_margin"
    android:orientation="vertical"
    tools:context=".MainActivity"&gt;

    &lt;TextView
        android:text="@string/hello_world"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content" /&gt;

    &lt;Button
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:text="发送消息"
        android:id="@+id/btnSendMsg" /&gt;

    &lt;Button
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:text="注册接收器"
        android:id="@+id/btnReg" /&gt;

    &lt;Button
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:text="注销接收器"
        android:id="@+id/btnUnreg" /&gt;

&lt;/LinearLayout&gt;
</code></pre>
]]></content>
  </entry>
  
</feed>
